version: '3.8'

services:
  web:
    build: .
    volumes:
      - ./data:/app/data
      - cli_builds:/app/static/cli    # Add this line to mount CLI builds
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://user:password@db:5432/championship
      - WS_PING_INTERVAL=25
      - WS_PING_TIMEOUT=60
      - SESSION_TYPE=sqlalchemy
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["gunicorn", 
             "--bind", "0.0.0.0:9000",
             "--worker-class", "geventwebsocket.gunicorn.workers.GeventWebSocketWorker",
             "--workers", "4",
             "--timeout", "120",
             "--keep-alive", "5",
             "--log-level", "info",
             "wsgi:application"]

    ports:
      - "${PORT:-9000}:9000"

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=championship
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d championship"]
      interval: 10s
      timeout: 5s
      retries: 5

  monitoring:
    build: 
      context: ./monitoring
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MONITORING_INTERVAL=300000
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - web

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SERVER_ROOT_URL=https://lic.mattdh.me/grafana
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  proxy:
    image: nginx:latest
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/conf.d:/etc/nginx/conf.d:ro"
    ports:
      - "4030:80"
    depends_on:
      - web
      - prometheus
      - grafana

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@db:5432/championship?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - db

  bugzilla:
    image: bugzilla/bugzilla-dev
    environment:
      - DB_DRIVER=sqlite3
      - DB_NAME=/data/bugzilla.db
      - BUGZILLA_ADMIN_EMAIL=admin@example.com
      - BUGZILLA_ADMIN_PASS=adminpass
      - BUGZILLA_URL=https://lic.mattdh.me/
    volumes:
      - bugzilla_data:/var/www/html/bugzilla/data
      - bugzilla_db:/data

  mattermost:
    image: mattermost/mattermost-team-edition
    environment:
      - MM_SQLSETTINGS_DRIVERNAME=postgres
      - MM_SQLSETTINGS_DATASOURCE=postgres://user:password@db:5432/mattermost?sslmode=disable
      - MM_SERVICESETTINGS_SITEURL=https://lic.mattdh.me/mattermost
    volumes:
      - mattermost_data:/mattermost/data
      - mattermost_logs:/mattermost/logs
      - mattermost_config:/mattermost/config
    depends_on:
      - db
      - monitoring

  matomo_db:
    image: mariadb:10.11
    command: --max-allowed-packet=64MB
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=matomo
      - MYSQL_USER=matomo
      - MYSQL_PASSWORD=matomo
    volumes:
      - matomo_mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 10s
      timeout: 5s
      retries: 3

  matomo:
    image: matomo:latest
    environment:
      - MATOMO_DATABASE_HOST=matomo_db
      - MATOMO_DATABASE_ADAPTER=mysql
      - MATOMO_DATABASE_TABLES_PREFIX=matomo_
      - MATOMO_DATABASE_USERNAME=matomo
      - MATOMO_DATABASE_PASSWORD=matomo
      - MATOMO_DATABASE_DBNAME=matomo
      - MATOMO_WEBSITE_HOST=lic.mattdh.me
      - MATOMO_WEBSITE_NAME=Last In Championship
    volumes:
      - matomo_data:/var/www/html/
    depends_on:
      matomo_db:
        condition: service_healthy

  cli-builder:
    build:
      context: ./cli
      dockerfile: Dockerfile.builder
    volumes:
      - cli_builds:/app/static/cli  # This ensures binaries are copied to the correct location
    restart: always  # Add this line to always restart
    command: ["sh", "/build-loop.sh"]  # Add this line to run continuous build script

volumes:
  postgres_data:
  prometheus_data:
  grafana-storage:
  bugzilla_data:
  mattermost_data:
  mattermost_logs:
  mattermost_config:
  bugzilla_db:
  matomo_data:
  matomo_mysql:
  cli_builds: